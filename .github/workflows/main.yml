name: Build

on:
  push:
    branches:
    - "*"  # run for branches
    tags:
    - "!*" # do not run for tags

env:
  TERRAFORM_VERSION: "1.1.7"

jobs:
  #
  #
  # Build artifacts
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3.0.0

    # Run builder
    - name: Run builder
      uses: ./.github/actions/builder

    # Upload artifacts
    - name: 'Upload artifacts'
      uses: actions/upload-artifact@v3.0.0
      with:
        name: _dist
        path: _dist/*.zip


  #
  #
  # Run `terraform test`
  test-terraform:
    runs-on: ubuntu-latest

    steps:
    # Checkout
    - uses: actions/checkout@v3.0.0

    # Setup Terraform
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1.3.2
      with:
        terraform_wrapper: false
        terraform_version: "${{ env.TERRAFORM_VERSION }}"

    # Run tests
    - name: Run tests
      run: make test-terraform


  #
  #
  # Test deploy to k3d
  test-k3d:
    runs-on: ubuntu-latest
    needs: build

    steps:
    # Checkout
    - uses: actions/checkout@v3.0.0

    # Setup k3d
    - name: Setup k3d
      uses: rinx/setup-k3d@v0.0.3
      with:
        skipClusterCreation: true

    - name: Create k3d cluster
      run: make k3d

    # Download build artifacts
    - name: 'Download build-artifacts'
      uses: actions/download-artifact@v2
      with:
        name: _dist
        path: _dist

    # Build test image
    - name: Build test image
      run: docker build -t test-k3d test/k3d/

    # Deploy to cluster
    - name: Run test container
      run: docker run --network host --rm -v `pwd`/_dist:/_dist -v $HOME/.kube/config:/opt/test/.kubeconfig test-k3d


  #
  #
  #
  publish:
    runs-on: ubuntu-latest
    needs: [test-k3d, test-terraform]

    steps:
    # Download build artifacts
    - name: 'Download build-artifacts'
      uses: actions/download-artifact@v3.0.0
      with:
        name: _dist
        path: _dist

    # Upload archive
    - uses: google-github-actions/setup-gcloud@v0.5.1
      with:
        service_account_key: ${{ secrets.GCLOUD_AUTH }}

    - run: gsutil -m cp _dist/*.zip gs://dev.catalog.kubestack.com


  #
  #
  # trigger promotion by tagging release
  trigger-promote:
    runs-on: ubuntu-latest
    needs: publish

    steps:
    - uses: actions/checkout@v3.0.0
    - run: |
            export TAG=$(echo $GITHUB_REF | sed -e "s#^refs/heads/##")
            git tag $TAG
            git tag
